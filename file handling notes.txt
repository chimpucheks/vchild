DAY 10: FILE HANDLING & MULTITHEARDING
1.pipe stream
import java.io.pipedReader,
import java.io.PipedWriter;


public class PipeReaderExample2{
public static  void main(string[] args){
try{


final PipedReader read = new PipedReader();
final PipedWriter write = new PipedWriter(read);




Thread readerThread=new Thread(new runnable(){
public void run(){
try{
 
int data= read.read();
while (data!=-1){
 system.out.println((char)data);
 data=read.read()
}
}catch (Exception ex){
}
}
}};

Thread writerThread=new Thread(new  Runnable(){
publlic void run(){
try {
write.write("I love my country\n".toCharArray());
}catch(Exception ex){
}
}};



readThread.start();
writerThread.start();

}catch(Exception ex){
system.out.println(ex.getMessage());
}
}


output:i love mmy country
example for pipedreader:



import java.io.PipedReader
imporrt java.io.pipedWriter;


public class PipedReaderExample2{
publlic Static void main(string[] args){
try{


final PipeReader read=new PipedReader();
final Pipedwriter write=new PipedWriter(read);


Thread readerThread=newThread(new runnable(){
public void run(){
try{
in data=read.read();
while(data!=_-1){
system.out.println((char)data);
data=read.read();
}
}catch (Exception ex){
}
}};

Thread writerThread=new Thread(new runnable(){
public void rn(){
try{
write.writer("I love my country\n"o CharArray());
}catch (Excedption ex){
}
}
}};
readerThread.start();
writerThread.strat();

}catch (Exception ex){
system..out.println(ex.getMessagge());
}
}
}
output: i lve my conutry

filter writer: abstract cls which is used to to wirte filters character stream


sequenceinput stream eg:
package com.javatpooint;
import java.io.*;
class inputStreamExample{
public static void main(string args[])throws Exception{
FileinputStream input1=new FileinputStream("D:\\testin.txt");
FileinputStream input2=newFileinputStream("D:\\testout.txt");
sequenceinputstream inst=newsequcenceinputstream(input1,input2);
int j;
While ((j=inst.read())!=-1){
system.out.print((char)j);
}
inst.close();
input1.close();
input2.close();
}
}

out put: welcome to java IO programmingit is the example of java sequenceInputStream class.



example that read the data from two files and writes into another file


importjava.io.*;
class input1{
public static void(string args[])throws Exception{

FileinputStream fin1=newFileInputStream("D:\\testin1.txt");
Fileinputstream fin2=newFileinputStream("D:\\testin2.txt");
Fileoutputstream fout=newFileInputstream("D:\\testout.txt");
sequcenceinputStream sis=newSequcenceInputStream(fin1,fin2);
int i;

while((i=sis.read())!=-1)
{

fout.write(i);
}

sis.close();
fout.close();
fin1.close();
fin2.close();
system.out.priintln("success..");


}
}

out put : success


datausing enumeration:
import java.io.*;
import java.util*;
class input2{
public static void main(string args[])throws IOException{
//creating the FileInputStream objects for all the files
fileInputstream fin=new FileInputStream("D:\\a.txt");
FileInputStream fin2=new FileInputStream("D:\\b.txt");
FileInputstream fin3=new FileInputStream("D.\\c.txt");
FileinputStream fin4=new fileInputStrea("D.\\d.txt");
//creating vector object to all the stream
vector v= new vector();
v.add(fin);
v.add(fin2);
v.add(fin3);
v.add(fin4);
//creating enumeration object by calling the elements method
Enumeration e=v.elements();
//passing the enuumeration object in the constructor
SequenceeInputStream bin=new sequenceeinputstream(e);
int i=0
while((i= bin.read())!=-1){
system.out.print((char)i);
}
bin.close()
fin.close()
fin2.close()
}
}

byte a=10
byte b=-20

 short data type
short s=10000,short r= 5000 

int data type
int a= 100000, intb=-200000

long data type
64 bits
long a= 100000L'
long b= -20000L

float data type
float f1=234.5f

double data type
double d1=12.3

chart data type
eg: char letterA='A'


eg for the random access file
java.io. RandomAccessFile;
 
ppublic class RandomAccessFileExample

static  final string FILEPATH="myfile.TxT";
public static void main(strinng[] args){
try{
system.out.println(new string(readFormFile(FILEPATH,0,18)));
WriteToFile(FILEPATH,"I love my country and my people",31);

}catch (IOException e){
e.printstackTrace();

}
}
private static byte[]readFromFile(String Filepath,int position,int size)
throws IOException{
RandomAccessFile file=new RandomAccessFile(filepath,"r");
file.seek(position);
bytes[]bytes=new bytes[size];
file.read(bytes);
file.close();
return bytes;
}
private static void writeToFile(strinng filepath,string data,intposition)

throws IOExcception
RandomAccessFile file=newRandomAccessFile(filepath,"rw");
file.seek(pposition);
file.write(data.getBytes());
file.close
}
}serilazation example:
import java.IO.serializable
public class student implements serializable{

int id;
string name;
public student(int id,string name){
this.id=id;
this.name=name;
}
}


thread example1
//implementing runnable interface by extending thread class
public class  ThreadExample1 extends Thread{
//run()method to perform action for thread.
public void run()
{

int a=10;
intb=12;
int result=a+b;

system.out.println("Thread started running..");
system.out.println("sum of the two numbers is:"+result);
}
publlic static void main(string args[])
{
//creating instance of the clas extend Thread class
ThreadExample1 t1=new ThreadExample1();
//calling start method to execute the run ()method of the thread class
t1.start();
}
}



































